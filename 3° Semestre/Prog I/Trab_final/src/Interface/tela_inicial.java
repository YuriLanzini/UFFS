/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import Classes.Bebida;
import Classes.Cliente;
import java.text.SimpleDateFormat;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yuri_lanzini
 */
public class tela_inicial extends javax.swing.JFrame {
    
    private List<Bebida> listaBebidas;
    private List<Cliente> listaClientes;
    
    public tela_inicial() {
        initComponents();
        setLookAndFeel();
        
    }
     
    private void setLookAndFeel() {
        try {
          
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void atualizarTabelaClientes(List<Cliente> listaClientes) {
           
    DefaultTableModel model = (DefaultTableModel) Tabela_Clientes.getModel();
    model.setRowCount(0); 
    
  
    listaClientes.sort(Comparator.comparingInt(cliente -> Integer.valueOf(cliente.getCodigo())));

    
    for (Cliente cliente : listaClientes) {
        Object[] row = {cliente.getCodigo(), cliente.getNome(), cliente.getCpf(), cliente.getIdade()};
            model.addRow(row);
      
    }
}
    
    public void atualizarTabelaBebidas(List<Bebida> listaBebidas) {
           
    DefaultTableModel model = (DefaultTableModel) Tabela_Bebidas.getModel();
    model.setRowCount(0); 
    
    
    listaBebidas.sort(Comparator.comparingInt(bebida -> Integer.valueOf(bebida.getCodigo())));

 
    for (Bebida bebida : listaBebidas) {
        Object[] row = {bebida.getCodigo(), bebida.getNome(), bebida.getConteudoLiquido(), bebida.getPrecoVenda(), bebida.getQuantidadeEstoque(), bebida.getTeorAlcoolico()};
            model.addRow(row);
      
    }
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Desk = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela_Clientes = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tabela_Bebidas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_codcomprar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_quantcomprar = new javax.swing.JTextField();
        btt_comprar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_vendercodcliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_vendcodbebida = new javax.swing.JTextField();
        txt_vendquant = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btt_Vender = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        cds_cliente = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        cds_bebida = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu de vendas");
        setAlwaysOnTop(true);

        Desk.setBackground(new java.awt.Color(204, 204, 204));

        Tabela_Clientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF", "Idade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabela_Clientes);

        Tabela_Bebidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "ML", "Preço", "Quantidade", "Teor Alcoól."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Tabela_Bebidas);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel1.setText("Comprar bebida:");

        jLabel2.setText("Digite o código da bebida:");

        txt_codcomprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codcomprarActionPerformed(evt);
            }
        });

        jLabel3.setText("Digite a quantidade que deseja comprar:");

        btt_comprar.setText("Comprar");
        btt_comprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_comprarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel4.setText("Vender bebida:");

        jLabel5.setText("Digite o código do cliente:");

        jLabel6.setText("Digite o código da bebida:");

        jLabel7.setText("Digite a quantidade a ser vendida:");

        btt_Vender.setText("Vender");
        btt_Vender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_VenderActionPerformed(evt);
            }
        });

        Desk.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(txt_codcomprar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(txt_quantcomprar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(btt_comprar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(txt_vendercodcliente, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(txt_vendcodbebida, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(txt_vendquant, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Desk.setLayer(btt_Vender, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout DeskLayout = new javax.swing.GroupLayout(Desk);
        Desk.setLayout(DeskLayout);
        DeskLayout.setHorizontalGroup(
            DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DeskLayout.createSequentialGroup()
                .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DeskLayout.createSequentialGroup()
                        .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DeskLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(DeskLayout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_vendcodbebida)
                                            .addComponent(txt_vendquant, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(DeskLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel6)
                                                .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addGroup(DeskLayout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addComponent(txt_vendercodcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(DeskLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DeskLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addGroup(DeskLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_codcomprar, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                            .addComponent(txt_quantcomprar, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DeskLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btt_Vender, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btt_comprar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)))
                .addGroup(DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(14, 14, 14))
        );
        DeskLayout.setVerticalGroup(
            DeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeskLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(DeskLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(9, 9, 9)
                .addComponent(txt_codcomprar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_quantcomprar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(btt_comprar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_vendercodcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(txt_vendcodbebida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(txt_vendquant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btt_Vender, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        cds_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/file_new_icon_178660.png"))); // NOI18N
        cds_cliente.setText("Cadastrar");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/cliente.png"))); // NOI18N
        jMenuItem1.setText("Cliente");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        cds_cliente.add(jMenuItem1);

        cds_bebida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/bebida.png"))); // NOI18N
        cds_bebida.setText("Bebida");
        cds_bebida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cds_bebidaActionPerformed(evt);
            }
        });
        cds_cliente.add(cds_bebida);

        jMenuBar1.add(cds_cliente);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Desk)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Desk, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cds_bebidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cds_bebidaActionPerformed
        
        menu_bebida menuBebida = new menu_bebida();
        Desk.add(menuBebida);
        menuBebida.show();
        List<Bebida> listaBebidas = menuBebida.getListaBebidas();
        setListaBebidas(listaBebidas);
        
    }//GEN-LAST:event_cds_bebidaActionPerformed

    private void txt_codcomprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codcomprarActionPerformed
       
        
    }//GEN-LAST:event_txt_codcomprarActionPerformed

    private void btt_comprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_comprarActionPerformed
       
    String codigoBebida = (txt_codcomprar.getText());
    int quantidade = Integer.parseInt(txt_quantcomprar.getText());

    Bebida bebida = null;
    for (Bebida b : listaBebidas) {
        if (b.getCodigo().equals(codigoBebida)) {
            bebida = b;
            break;
        }
    }
    
    if (bebida == null) {
        JOptionPane.showMessageDialog(this, "Bebida não encontrada!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    bebida.setQuantidadeEstoque(bebida.getQuantidadeEstoque() + quantidade);

    atualizarTabelaBebidas(listaBebidas);

    txt_codcomprar.setText("");
    txt_quantcomprar.setText("");

    JOptionPane.showMessageDialog(this, "Compra realizada com sucesso!", "Compra", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btt_comprarActionPerformed

    private void criarNotaFiscal(Cliente cliente, Bebida bebida, int quantidade) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date dataAtual = new Date();

        // Dados da nota fiscal
        String notaFiscal = "==================================\n"
                + "Data: " + sdf.format(dataAtual) + "\n"
                + "Cliente: " + cliente.getNome() + "\n"
                + "CPF: " + cliente.getCpf() + "\n\n"
                + "Bebida: " + bebida.getNome() + "\n"
                + "Quantidade: " + quantidade + "\n"
                + "Valor: R$ " + bebida.getPrecoVenda() + "\n"
                + "Total: R$ " + (bebida.getPrecoVenda() * quantidade) + "\n"
                + "==================================";

        JOptionPane.showMessageDialog(this, notaFiscal, "Nota Fiscal", JOptionPane.INFORMATION_MESSAGE);
    }

    private void btt_VenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_VenderActionPerformed
        
 
        String codigoCliente = txt_vendercodcliente.getText();
        String codigoBebida = txt_vendcodbebida.getText();
        int quantidadeVendida = Integer.parseInt(txt_vendquant.getText());

        Cliente cliente = null;
        for (Cliente c : listaClientes) {
            if (c.getCodigo().equals(codigoCliente)) {
                cliente = c;
                break;
            }
        }

        Bebida bebida = null;
        for (Bebida b : listaBebidas) {
            if (b.getCodigo().equals(codigoBebida)) {
                bebida = b;
                break;
            }
        }

        if (cliente == null || bebida == null) {
            JOptionPane.showMessageDialog(this, "Cliente ou bebida não encontrados!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (bebida.getTeorAlcoolico() > 0 && cliente.getIdade() < 18) {
        JOptionPane.showMessageDialog(this, "Não é permitido vender bebidas alcoólicas para menores de 18 anos!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

        if (bebida.getQuantidadeEstoque() < quantidadeVendida) {
            JOptionPane.showMessageDialog(this, "Quantidade insuficiente em estoque!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        bebida.setQuantidadeEstoque(bebida.getQuantidadeEstoque() - quantidadeVendida);
        atualizarTabelaBebidas(listaBebidas);

        txt_vendercodcliente.setText("");
        txt_vendcodbebida.setText("");
        txt_vendquant.setText("");

        JOptionPane.showMessageDialog(this, "Venda realizada com sucesso!", "Venda", JOptionPane.INFORMATION_MESSAGE);
        
        criarNotaFiscal(cliente, bebida, quantidadeVendida);
    }//GEN-LAST:event_btt_VenderActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        menu_cliente menuCliente = new menu_cliente();
        Desk.add(menuCliente);
        menuCliente.show();
        List<Cliente> listaClientes = menuCliente.getListaClientes();
        setListaClientes(listaClientes);

    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            tela_inicial telaInicial = new tela_inicial();
            telaInicial.setVisible(true);
        }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane Desk;
    private javax.swing.JTable Tabela_Bebidas;
    private javax.swing.JTable Tabela_Clientes;
    private javax.swing.JButton btt_Vender;
    private javax.swing.JButton btt_comprar;
    private javax.swing.JMenuItem cds_bebida;
    private javax.swing.JMenu cds_cliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txt_codcomprar;
    private javax.swing.JTextField txt_quantcomprar;
    private javax.swing.JTextField txt_vendcodbebida;
    private javax.swing.JTextField txt_vendercodcliente;
    private javax.swing.JTextField txt_vendquant;
    // End of variables declaration//GEN-END:variables

    public void setListaBebidas(List<Bebida> listaBebidas) {
        this.listaBebidas = listaBebidas;
    }

    public void setListaClientes(List<Cliente> listaClientes) {
        this.listaClientes = listaClientes;
    }


}
